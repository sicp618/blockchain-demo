type ItemBought @entity {
    id: ID!
    buyer: Bytes! # address
    nftAddress: Bytes! # address
    tokenId: BigInt! # uint256
    price: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type ItemCanceled @entity {
    id: ID!
    seller: Bytes! # address
    nftAddress: Bytes! # address
    tokenId: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type ItemListed @entity {
    id: ID!
    seller: Bytes! # address
    nftAddress: Bytes! # address
    tokenId: BigInt! # uint256
    price: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type ActiveItem @entity {
    id: ID!
    buyer: Bytes! # address
    seller: Bytes! # address
    nftAddress: Bytes! # address
    tokenId: BigInt! # uint256
    price: BigInt! # uint256
}

type Approval @entity {
  id: ID!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity {
  id: ID!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CubeMintd @entity {
  id: ID!
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity {
  id: ID!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NftInfo @entity {
  id: ID!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
}
